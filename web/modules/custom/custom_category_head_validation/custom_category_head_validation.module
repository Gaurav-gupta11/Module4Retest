<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\User;

/**
 * Implements hook_form_alter().
 */
function custom_category_head_validation_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'user_register_form') {
    	$form['#validate'][] = 'custom_category_head_validation_validate_category_head';
	}
}

/**
 * Custom validation function for the Category Head field.
 */
function custom_category_head_validation_validate_category_head(array &$form, FormStateInterface $form_state) {
  // Get the selected category head value from the form state
  $selectedCategoryHead = $form_state->getValue('field_category_head');
	if (!empty($selectedCategoryHead)) {
    // Extract target_ids from the array.
    $targetIds = [];
    foreach ($selectedCategoryHead as $item) {
      if (isset($item['target_id'])) {
        $targetIds[] = $item['target_id'];
      }
    }

    // Perform the query with the extracted target_ids.
    $query = \Drupal::entityQuery('user')
      ->condition('field_category_head.target_id', $targetIds)
      ->condition('roles', ['editor']);
    $query->accessCheck(True);
    $existingEditorIds = $query->execute();


	  $currentEditorId = \Drupal::currentUser()->id();

    // Remove the current user's ID from the list.
    if ($currentEditorId) {
      unset($existingEditorIds[$currentEditorId]);
    }

    // Check if there are existing editor IDs.
    if (!empty($existingEditorIds)) {
      // Set an error on the 'field_category_head' form element.
      $form_state->setErrorByName('field_category_head', ('This category is already assigned to another editor as the category head.'));
    }
  }
}


  